"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dateHelper_1 = require("../../utils/dateHelper");
Page({
    data: {},
    onLoad: function (options) {
    },
    onReady: function () {
        const currDate = dateHelper_1.toFormatString(new Date());
        const newBook = {
            bookName: '',
            bookid: '',
            initDate: currDate,
            initAmount: 0,
            currency: 'CNY',
            currAmount: 0,
            desc: '',
        };
        this.setData(Object.assign({}, newBook));
    },
    onDateChange: function (event) {
        const { detail: { value } } = event;
        this.setData({
            initDate: value,
        });
    },
    onNameChange: function (event) {
        const { detail: { value } } = event;
        this.setData({
            bookName: value,
        });
    },
    onAmountChange: function (event) {
        const { detail: { value } } = event;
        this.setData({
            initAmount: parseFloat(value),
        });
    },
    onDesChange: function (event) {
        const { detail: { text } } = event;
        this.setData({
            desc: text,
        });
    },
    onAddBook: function () {
        const { bookName, initAmount, initDate, currency } = this.data;
        wx.cloud.callFunction({
            name: "addBook",
            data: {
                bookName,
                initAmount,
                initDate,
                currency,
            },
        }).then(res => {
            console.log('调用success', res);
            wx.navigateBack({
                delta: 0,
            });
        }).catch((err) => console.log(err));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkQm9vay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFkZEJvb2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1REFBdUQ7QUFNdkQsSUFBSSxDQUFDO0lBS0gsSUFBSSxFQUFFLEVBQ0w7SUFLRCxNQUFNLEVBQUUsVUFBVSxPQUFPO0lBRXpCLENBQUM7SUFLRCxPQUFPLEVBQUU7UUFDUCxNQUFNLFFBQVEsR0FBRywyQkFBYyxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQTtRQUMzQyxNQUFNLE9BQU8sR0FBUztZQUNwQixRQUFRLEVBQUUsRUFBRTtZQUNaLE1BQU0sRUFBRSxFQUFFO1lBQ1YsUUFBUSxFQUFFLFFBQVE7WUFDbEIsVUFBVSxFQUFFLENBQUM7WUFDYixRQUFRLEVBQUUsS0FBSztZQUNmLFVBQVUsRUFBRSxDQUFDO1lBQ2IsSUFBSSxFQUFDLEVBQUU7U0FDUixDQUFBO1FBQ0QsSUFBSSxDQUFDLE9BQU8sbUJBQ1AsT0FBTyxFQUNWLENBQUE7SUFDSixDQUFDO0lBU0QsWUFBWSxFQUFFLFVBQVUsS0FBVTtRQUNoQyxNQUFNLEVBQUUsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsR0FBRyxLQUFLLENBQUE7UUFDbkMsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLFFBQVEsRUFBRSxLQUFLO1NBQ2hCLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFFRCxZQUFZLEVBQUUsVUFBVSxLQUFVO1FBQ2hDLE1BQU0sRUFBRSxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxHQUFHLEtBQUssQ0FBQTtRQUNuQyxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1gsUUFBUSxFQUFFLEtBQUs7U0FDaEIsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVELGNBQWMsRUFBRSxVQUFVLEtBQVU7UUFDbEMsTUFBTSxFQUFFLE1BQU0sRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLEdBQUcsS0FBSyxDQUFBO1FBQ25DLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDWCxVQUFVLEVBQUUsVUFBVSxDQUFDLEtBQUssQ0FBQztTQUM5QixDQUFDLENBQUE7SUFDSixDQUFDO0lBRUQsV0FBVyxFQUFFLFVBQVUsS0FBVTtRQUMvQixNQUFNLEVBQUUsTUFBTSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsR0FBRyxLQUFLLENBQUE7UUFDbEMsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLElBQUksRUFBRSxJQUFJO1NBQ1gsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVELFNBQVMsRUFBRTtRQUNULE1BQU0sRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBZ0IsQ0FBQztRQUMzRSxFQUFFLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQztZQUNwQixJQUFJLEVBQUUsU0FBUztZQUNmLElBQUksRUFBRTtnQkFDSixRQUFRO2dCQUNSLFVBQVU7Z0JBQ1YsUUFBUTtnQkFDUixRQUFRO2FBQ1Q7U0FDRixDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ1osT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsR0FBRyxDQUFDLENBQUE7WUFDN0IsRUFBRSxDQUFDLFlBQVksQ0FBQztnQkFDZCxLQUFLLEVBQUUsQ0FBQzthQUNULENBQUMsQ0FBQTtRQUNKLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO0lBQ3JDLENBQUM7Q0FDRixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0b0Zvcm1hdFN0cmluZyB9IGZyb20gJy4uLy4uL3V0aWxzL2RhdGVIZWxwZXInXHJcbmltcG9ydCB7IGJvb2sgfSBmcm9tICcuLi8uLi9kYXRhTW9kZWwvZGF0YSdcclxuXHJcbmludGVyZmFjZSBwYWdlRGF0YSBleHRlbmRzIGJvb2sge1xyXG59XHJcblxyXG5QYWdlKHtcclxuXHJcbiAgLyoqXHJcbiAgICog6aG16Z2i55qE5Yid5aeL5pWw5o2uXHJcbiAgICovXHJcbiAgZGF0YToge1xyXG4gIH0sXHJcblxyXG4gIC8qKlxyXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Yqg6L29XHJcbiAgICovXHJcbiAgb25Mb2FkOiBmdW5jdGlvbiAob3B0aW9ucykge1xyXG5cclxuICB9LFxyXG5cclxuICAvKipcclxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouWIneasoea4suafk+WujOaIkFxyXG4gICAqL1xyXG4gIG9uUmVhZHk6IGZ1bmN0aW9uICgpIHtcclxuICAgIGNvbnN0IGN1cnJEYXRlID0gdG9Gb3JtYXRTdHJpbmcobmV3IERhdGUoKSlcclxuICAgIGNvbnN0IG5ld0Jvb2s6IGJvb2sgPSB7XHJcbiAgICAgIGJvb2tOYW1lOiAnJyxcclxuICAgICAgYm9va2lkOiAnJyxcclxuICAgICAgaW5pdERhdGU6IGN1cnJEYXRlLFxyXG4gICAgICBpbml0QW1vdW50OiAwLFxyXG4gICAgICBjdXJyZW5jeTogJ0NOWScsXHJcbiAgICAgIGN1cnJBbW91bnQ6IDAsXHJcbiAgICAgIGRlc2M6JycsXHJcbiAgICB9XHJcbiAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICAuLi5uZXdCb29rXHJcbiAgICB9KVxyXG4gIH0sXHJcblxyXG4gIC8qKlxyXG4gICAqIOeUqOaIt+eCueWHu+WPs+S4iuinkuWIhuS6q1xyXG4gICAqL1xyXG4gIC8vIG9uU2hhcmVBcHBNZXNzYWdlOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gIC8vIH0sXHJcblxyXG4gIG9uRGF0ZUNoYW5nZTogZnVuY3Rpb24gKGV2ZW50OiBhbnkpIHtcclxuICAgIGNvbnN0IHsgZGV0YWlsOiB7IHZhbHVlIH0gfSA9IGV2ZW50XHJcbiAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICBpbml0RGF0ZTogdmFsdWUsXHJcbiAgICB9KVxyXG4gIH0sXHJcblxyXG4gIG9uTmFtZUNoYW5nZTogZnVuY3Rpb24gKGV2ZW50OiBhbnkpIHtcclxuICAgIGNvbnN0IHsgZGV0YWlsOiB7IHZhbHVlIH0gfSA9IGV2ZW50XHJcbiAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICBib29rTmFtZTogdmFsdWUsXHJcbiAgICB9KVxyXG4gIH0sXHJcblxyXG4gIG9uQW1vdW50Q2hhbmdlOiBmdW5jdGlvbiAoZXZlbnQ6IGFueSkge1xyXG4gICAgY29uc3QgeyBkZXRhaWw6IHsgdmFsdWUgfSB9ID0gZXZlbnRcclxuICAgIHRoaXMuc2V0RGF0YSh7XHJcbiAgICAgIGluaXRBbW91bnQ6IHBhcnNlRmxvYXQodmFsdWUpLFxyXG4gICAgfSlcclxuICB9LFxyXG5cclxuICBvbkRlc0NoYW5nZTogZnVuY3Rpb24gKGV2ZW50OiBhbnkpIHtcclxuICAgIGNvbnN0IHsgZGV0YWlsOiB7IHRleHQgfSB9ID0gZXZlbnRcclxuICAgIHRoaXMuc2V0RGF0YSh7XHJcbiAgICAgIGRlc2M6IHRleHQsXHJcbiAgICB9KVxyXG4gIH0sXHJcblxyXG4gIG9uQWRkQm9vazogZnVuY3Rpb24gKCkge1xyXG4gICAgY29uc3QgeyBib29rTmFtZSwgaW5pdEFtb3VudCwgaW5pdERhdGUsIGN1cnJlbmN5IH0gPSB0aGlzLmRhdGEgYXMgcGFnZURhdGE7XHJcbiAgICB3eC5jbG91ZC5jYWxsRnVuY3Rpb24oe1xyXG4gICAgICBuYW1lOiBcImFkZEJvb2tcIixcclxuICAgICAgZGF0YToge1xyXG4gICAgICAgIGJvb2tOYW1lLFxyXG4gICAgICAgIGluaXRBbW91bnQsXHJcbiAgICAgICAgaW5pdERhdGUsXHJcbiAgICAgICAgY3VycmVuY3ksXHJcbiAgICAgIH0sXHJcbiAgICB9KS50aGVuKHJlcyA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCfosIPnlKhzdWNjZXNzJywgcmVzKVxyXG4gICAgICB3eC5uYXZpZ2F0ZUJhY2soe1xyXG4gICAgICAgIGRlbHRhOiAwLFxyXG4gICAgICB9KVxyXG4gICAgfSkuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSlcclxuICB9XHJcbn0pIl19