"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commonHelper_1 = require("../../utils/commonHelper");
Page({
    data: {},
    onReady: function () {
        const currDate = commonHelper_1.toFormatString(new Date());
        const newBook = {
            bookName: '',
            _id: '',
            initDate: currDate,
            initAmount: 0,
            currency: 'CNY',
            currAmount: 0,
            desc: '',
        };
        this.setData(Object.assign({}, newBook));
    },
    onDateChange: function (event) {
        const { detail } = event;
        this.setData({
            initDate: detail,
        });
    },
    onNameChange: function (event) {
        const { detail: { value } } = event;
        this.setData({
            bookName: value,
        });
    },
    onAmountChange: function (event) {
        const { detail } = event;
        this.setData({
            initAmount: parseFloat(detail),
        });
    },
    onDesChange: function (event) {
        const { detail } = event;
        this.setData({
            desc: detail,
        });
    },
    onAddBook: function () {
        const { bookName, initAmount, initDate, currency } = this.data;
        wx.cloud.callFunction({
            name: "addBook",
            data: {
                bookName,
                initAmount,
                initDate,
                currency,
            },
        }).then(res => {
            console.log('调用success', res);
            wx.navigateBack({
                delta: 0,
            });
        }).catch((err) => console.log(err));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkQm9vay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFkZEJvb2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyREFBeUQ7QUFNekQsSUFBSSxDQUFDO0lBS0gsSUFBSSxFQUFFLEVBQ0w7SUFLRCxPQUFPLEVBQUU7UUFDUCxNQUFNLFFBQVEsR0FBRyw2QkFBYyxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQTtRQUMzQyxNQUFNLE9BQU8sR0FBUztZQUNwQixRQUFRLEVBQUUsRUFBRTtZQUNaLEdBQUcsRUFBRSxFQUFFO1lBQ1AsUUFBUSxFQUFFLFFBQVE7WUFDbEIsVUFBVSxFQUFFLENBQUM7WUFDYixRQUFRLEVBQUUsS0FBSztZQUNmLFVBQVUsRUFBRSxDQUFDO1lBQ2IsSUFBSSxFQUFFLEVBQUU7U0FDVCxDQUFBO1FBQ0QsSUFBSSxDQUFDLE9BQU8sbUJBQ1AsT0FBTyxFQUNWLENBQUE7SUFDSixDQUFDO0lBU0QsWUFBWSxFQUFFLFVBQVUsS0FBVTtRQUNoQyxNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFBO1FBQ3hCLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDWCxRQUFRLEVBQUUsTUFBTTtTQUNqQixDQUFDLENBQUE7SUFDSixDQUFDO0lBRUQsWUFBWSxFQUFFLFVBQVUsS0FBVTtRQUNoQyxNQUFNLEVBQUUsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsR0FBRyxLQUFLLENBQUE7UUFDbkMsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLFFBQVEsRUFBRSxLQUFLO1NBQ2hCLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFFRCxjQUFjLEVBQUUsVUFBVSxLQUFVO1FBQ2xDLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxLQUFLLENBQUE7UUFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLFVBQVUsRUFBRSxVQUFVLENBQUMsTUFBTSxDQUFDO1NBQy9CLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFFRCxXQUFXLEVBQUUsVUFBVSxLQUFVO1FBQy9CLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxLQUFLLENBQUE7UUFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLElBQUksRUFBRSxNQUFNO1NBQ2IsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVELFNBQVMsRUFBRTtRQUNULE1BQU0sRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBZ0IsQ0FBQztRQUMzRSxFQUFFLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQztZQUNwQixJQUFJLEVBQUUsU0FBUztZQUNmLElBQUksRUFBRTtnQkFDSixRQUFRO2dCQUNSLFVBQVU7Z0JBQ1YsUUFBUTtnQkFDUixRQUFRO2FBQ1Q7U0FDRixDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ1osT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsR0FBRyxDQUFDLENBQUE7WUFDN0IsRUFBRSxDQUFDLFlBQVksQ0FBQztnQkFDZCxLQUFLLEVBQUUsQ0FBQzthQUNULENBQUMsQ0FBQTtRQUNKLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO0lBQ3JDLENBQUM7Q0FDRixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0b0Zvcm1hdFN0cmluZyB9IGZyb20gJy4uLy4uL3V0aWxzL2NvbW1vbkhlbHBlcidcbmltcG9ydCB7IGJvb2sgfSBmcm9tICcuLi8uLi9kYXRhTW9kZWwvZGF0YSdcblxuaW50ZXJmYWNlIHBhZ2VEYXRhIGV4dGVuZHMgYm9vayB7XG59XG5cblBhZ2Uoe1xuXG4gIC8qKlxuICAgKiDpobXpnaLnmoTliJ3lp4vmlbDmja5cbiAgICovXG4gIGRhdGE6IHtcbiAgfSxcblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLliJ3mrKHmuLLmn5PlrozmiJBcbiAgICovXG4gIG9uUmVhZHk6IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBjdXJyRGF0ZSA9IHRvRm9ybWF0U3RyaW5nKG5ldyBEYXRlKCkpXG4gICAgY29uc3QgbmV3Qm9vazogYm9vayA9IHtcbiAgICAgIGJvb2tOYW1lOiAnJyxcbiAgICAgIF9pZDogJycsXG4gICAgICBpbml0RGF0ZTogY3VyckRhdGUsXG4gICAgICBpbml0QW1vdW50OiAwLFxuICAgICAgY3VycmVuY3k6ICdDTlknLFxuICAgICAgY3VyckFtb3VudDogMCxcbiAgICAgIGRlc2M6ICcnLFxuICAgIH1cbiAgICB0aGlzLnNldERhdGEoe1xuICAgICAgLi4ubmV3Qm9va1xuICAgIH0pXG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUqOaIt+eCueWHu+WPs+S4iuinkuWIhuS6q1xuICAgKi9cbiAgLy8gb25TaGFyZUFwcE1lc3NhZ2U6IGZ1bmN0aW9uICgpIHtcblxuICAvLyB9LFxuXG4gIG9uRGF0ZUNoYW5nZTogZnVuY3Rpb24gKGV2ZW50OiBhbnkpIHtcbiAgICBjb25zdCB7IGRldGFpbCB9ID0gZXZlbnRcbiAgICB0aGlzLnNldERhdGEoe1xuICAgICAgaW5pdERhdGU6IGRldGFpbCxcbiAgICB9KVxuICB9LFxuXG4gIG9uTmFtZUNoYW5nZTogZnVuY3Rpb24gKGV2ZW50OiBhbnkpIHtcbiAgICBjb25zdCB7IGRldGFpbDogeyB2YWx1ZSB9IH0gPSBldmVudFxuICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICBib29rTmFtZTogdmFsdWUsXG4gICAgfSlcbiAgfSxcblxuICBvbkFtb3VudENoYW5nZTogZnVuY3Rpb24gKGV2ZW50OiBhbnkpIHtcbiAgICBjb25zdCB7IGRldGFpbCB9ID0gZXZlbnRcbiAgICB0aGlzLnNldERhdGEoe1xuICAgICAgaW5pdEFtb3VudDogcGFyc2VGbG9hdChkZXRhaWwpLFxuICAgIH0pXG4gIH0sXG5cbiAgb25EZXNDaGFuZ2U6IGZ1bmN0aW9uIChldmVudDogYW55KSB7XG4gICAgY29uc3QgeyBkZXRhaWwgfSA9IGV2ZW50XG4gICAgdGhpcy5zZXREYXRhKHtcbiAgICAgIGRlc2M6IGRldGFpbCxcbiAgICB9KVxuICB9LFxuXG4gIG9uQWRkQm9vazogZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHsgYm9va05hbWUsIGluaXRBbW91bnQsIGluaXREYXRlLCBjdXJyZW5jeSB9ID0gdGhpcy5kYXRhIGFzIHBhZ2VEYXRhO1xuICAgIHd4LmNsb3VkLmNhbGxGdW5jdGlvbih7XG4gICAgICBuYW1lOiBcImFkZEJvb2tcIixcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgYm9va05hbWUsXG4gICAgICAgIGluaXRBbW91bnQsXG4gICAgICAgIGluaXREYXRlLFxuICAgICAgICBjdXJyZW5jeSxcbiAgICAgIH0sXG4gICAgfSkudGhlbihyZXMgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ+iwg+eUqHN1Y2Nlc3MnLCByZXMpXG4gICAgICB3eC5uYXZpZ2F0ZUJhY2soe1xuICAgICAgICBkZWx0YTogMCxcbiAgICAgIH0pXG4gICAgfSkuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSlcbiAgfVxufSkiXX0=